// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tracer.proto

package tracer

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Event struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Call                 string   `protobuf:"bytes,2,opt,name=call,proto3" json:"call,omitempty"`
	Timestamp            int64    `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d422d7c66fbbd8f, []int{0}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Event) GetCall() string {
	if m != nil {
		return m.Call
	}
	return ""
}

func (m *Event) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type Trace struct {
	Events               []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Trace) Reset()         { *m = Trace{} }
func (m *Trace) String() string { return proto.CompactTextString(m) }
func (*Trace) ProtoMessage()    {}
func (*Trace) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d422d7c66fbbd8f, []int{1}
}

func (m *Trace) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trace.Unmarshal(m, b)
}
func (m *Trace) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trace.Marshal(b, m, deterministic)
}
func (m *Trace) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trace.Merge(m, src)
}
func (m *Trace) XXX_Size() int {
	return xxx_messageInfo_Trace.Size(m)
}
func (m *Trace) XXX_DiscardUnknown() {
	xxx_messageInfo_Trace.DiscardUnknown(m)
}

var xxx_messageInfo_Trace proto.InternalMessageInfo

func (m *Trace) GetEvents() []*Event {
	if m != nil {
		return m.Events
	}
	return nil
}

type RecordRequest struct {
	Event                *Event   `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecordRequest) Reset()         { *m = RecordRequest{} }
func (m *RecordRequest) String() string { return proto.CompactTextString(m) }
func (*RecordRequest) ProtoMessage()    {}
func (*RecordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d422d7c66fbbd8f, []int{2}
}

func (m *RecordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecordRequest.Unmarshal(m, b)
}
func (m *RecordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecordRequest.Marshal(b, m, deterministic)
}
func (m *RecordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecordRequest.Merge(m, src)
}
func (m *RecordRequest) XXX_Size() int {
	return xxx_messageInfo_RecordRequest.Size(m)
}
func (m *RecordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RecordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RecordRequest proto.InternalMessageInfo

func (m *RecordRequest) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type RecordResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecordResponse) Reset()         { *m = RecordResponse{} }
func (m *RecordResponse) String() string { return proto.CompactTextString(m) }
func (*RecordResponse) ProtoMessage()    {}
func (*RecordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d422d7c66fbbd8f, []int{3}
}

func (m *RecordResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecordResponse.Unmarshal(m, b)
}
func (m *RecordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecordResponse.Marshal(b, m, deterministic)
}
func (m *RecordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecordResponse.Merge(m, src)
}
func (m *RecordResponse) XXX_Size() int {
	return xxx_messageInfo_RecordResponse.Size(m)
}
func (m *RecordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RecordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RecordResponse proto.InternalMessageInfo

type TraceRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TraceRequest) Reset()         { *m = TraceRequest{} }
func (m *TraceRequest) String() string { return proto.CompactTextString(m) }
func (*TraceRequest) ProtoMessage()    {}
func (*TraceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d422d7c66fbbd8f, []int{4}
}

func (m *TraceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TraceRequest.Unmarshal(m, b)
}
func (m *TraceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TraceRequest.Marshal(b, m, deterministic)
}
func (m *TraceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TraceRequest.Merge(m, src)
}
func (m *TraceRequest) XXX_Size() int {
	return xxx_messageInfo_TraceRequest.Size(m)
}
func (m *TraceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TraceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TraceRequest proto.InternalMessageInfo

func (m *TraceRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type TraceResponse struct {
	Traces               []*Trace `protobuf:"bytes,1,rep,name=traces,proto3" json:"traces,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TraceResponse) Reset()         { *m = TraceResponse{} }
func (m *TraceResponse) String() string { return proto.CompactTextString(m) }
func (*TraceResponse) ProtoMessage()    {}
func (*TraceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d422d7c66fbbd8f, []int{5}
}

func (m *TraceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TraceResponse.Unmarshal(m, b)
}
func (m *TraceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TraceResponse.Marshal(b, m, deterministic)
}
func (m *TraceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TraceResponse.Merge(m, src)
}
func (m *TraceResponse) XXX_Size() int {
	return xxx_messageInfo_TraceResponse.Size(m)
}
func (m *TraceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TraceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TraceResponse proto.InternalMessageInfo

func (m *TraceResponse) GetTraces() []*Trace {
	if m != nil {
		return m.Traces
	}
	return nil
}

type MarkRequest struct {
	LongRunningId        string   `protobuf:"bytes,1,opt,name=long_running_id,json=longRunningId,proto3" json:"long_running_id,omitempty"`
	RunningTimeInMs      int64    `protobuf:"varint,2,opt,name=running_time_in_ms,json=runningTimeInMs,proto3" json:"running_time_in_ms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarkRequest) Reset()         { *m = MarkRequest{} }
func (m *MarkRequest) String() string { return proto.CompactTextString(m) }
func (*MarkRequest) ProtoMessage()    {}
func (*MarkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d422d7c66fbbd8f, []int{6}
}

func (m *MarkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarkRequest.Unmarshal(m, b)
}
func (m *MarkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarkRequest.Marshal(b, m, deterministic)
}
func (m *MarkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarkRequest.Merge(m, src)
}
func (m *MarkRequest) XXX_Size() int {
	return xxx_messageInfo_MarkRequest.Size(m)
}
func (m *MarkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MarkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MarkRequest proto.InternalMessageInfo

func (m *MarkRequest) GetLongRunningId() string {
	if m != nil {
		return m.LongRunningId
	}
	return ""
}

func (m *MarkRequest) GetRunningTimeInMs() int64 {
	if m != nil {
		return m.RunningTimeInMs
	}
	return 0
}

type MarkResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarkResponse) Reset()         { *m = MarkResponse{} }
func (m *MarkResponse) String() string { return proto.CompactTextString(m) }
func (*MarkResponse) ProtoMessage()    {}
func (*MarkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d422d7c66fbbd8f, []int{7}
}

func (m *MarkResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarkResponse.Unmarshal(m, b)
}
func (m *MarkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarkResponse.Marshal(b, m, deterministic)
}
func (m *MarkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarkResponse.Merge(m, src)
}
func (m *MarkResponse) XXX_Size() int {
	return xxx_messageInfo_MarkResponse.Size(m)
}
func (m *MarkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MarkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MarkResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Event)(nil), "tracer.Event")
	proto.RegisterType((*Trace)(nil), "tracer.Trace")
	proto.RegisterType((*RecordRequest)(nil), "tracer.RecordRequest")
	proto.RegisterType((*RecordResponse)(nil), "tracer.RecordResponse")
	proto.RegisterType((*TraceRequest)(nil), "tracer.TraceRequest")
	proto.RegisterType((*TraceResponse)(nil), "tracer.TraceResponse")
	proto.RegisterType((*MarkRequest)(nil), "tracer.MarkRequest")
	proto.RegisterType((*MarkResponse)(nil), "tracer.MarkResponse")
}

func init() { proto.RegisterFile("tracer.proto", fileDescriptor_6d422d7c66fbbd8f) }

var fileDescriptor_6d422d7c66fbbd8f = []byte{
	// 328 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x52, 0x4d, 0x6b, 0xc2, 0x40,
	0x14, 0x6c, 0x8c, 0x06, 0x7c, 0x1a, 0x2d, 0xaf, 0x5a, 0x82, 0x94, 0x22, 0x5b, 0x5a, 0x84, 0x82,
	0x07, 0x2d, 0x42, 0x7f, 0x40, 0x0f, 0x1e, 0xbc, 0x6c, 0xbd, 0x87, 0x98, 0x2c, 0xb2, 0xd4, 0x6c,
	0xec, 0x6e, 0xf4, 0xaf, 0xf5, 0xef, 0x95, 0xfd, 0xb2, 0x55, 0x6f, 0xc9, 0xcc, 0x9b, 0x37, 0xf3,
	0x26, 0x81, 0x6e, 0x2d, 0xb3, 0x9c, 0xc9, 0xe9, 0x5e, 0x56, 0x75, 0x85, 0x91, 0x7d, 0x23, 0x4b,
	0x68, 0x7d, 0x1c, 0x99, 0xa8, 0xb1, 0x07, 0x0d, 0x5e, 0x24, 0xc1, 0x38, 0x98, 0xb4, 0x69, 0x83,
	0x17, 0x88, 0xd0, 0xcc, 0xb3, 0xdd, 0x2e, 0x69, 0x18, 0xc4, 0x3c, 0xe3, 0x03, 0xb4, 0x6b, 0x5e,
	0x32, 0x55, 0x67, 0xe5, 0x3e, 0x09, 0xc7, 0xc1, 0x24, 0xa4, 0x7f, 0x00, 0x99, 0x42, 0x6b, 0xad,
	0x97, 0xe2, 0x33, 0x44, 0x4c, 0xef, 0x54, 0x49, 0x30, 0x0e, 0x27, 0x9d, 0x59, 0x3c, 0x75, 0xd6,
	0xc6, 0x89, 0x3a, 0x92, 0xbc, 0x41, 0x4c, 0x59, 0x5e, 0xc9, 0x82, 0xb2, 0xef, 0x03, 0x53, 0x35,
	0x3e, 0x41, 0xcb, 0x50, 0x26, 0xc5, 0x95, 0xcc, 0x72, 0xe4, 0x16, 0x7a, 0x5e, 0xa5, 0xf6, 0x95,
	0x50, 0x8c, 0x3c, 0x42, 0xd7, 0xf8, 0xfa, 0x35, 0x17, 0x97, 0x90, 0x05, 0xc4, 0x8e, 0xb7, 0x02,
	0x9d, 0xcf, 0x6c, 0xbe, 0xca, 0x67, 0xc7, 0x1c, 0x49, 0x36, 0xd0, 0x59, 0x65, 0xf2, 0xcb, 0xaf,
	0x7d, 0x81, 0xfe, 0xae, 0x12, 0xdb, 0x54, 0x1e, 0x84, 0xe0, 0x62, 0x9b, 0x9e, 0x3c, 0x62, 0x0d,
	0x53, 0x8b, 0x2e, 0x0b, 0x7c, 0x05, 0xf4, 0x23, 0xba, 0x9b, 0x94, 0x8b, 0xb4, 0x54, 0xa6, 0xc6,
	0x90, 0xf6, 0x1d, 0xb3, 0xe6, 0x25, 0x5b, 0x8a, 0x95, 0x22, 0x3d, 0xe8, 0x5a, 0x0f, 0x1b, 0x6d,
	0xf6, 0x13, 0xb8, 0xb0, 0xf2, 0x93, 0xc9, 0x23, 0xcf, 0x19, 0xbe, 0x43, 0x64, 0xef, 0xc5, 0xa1,
	0x8f, 0x79, 0xd6, 0xda, 0xe8, 0xfe, 0x12, 0x76, 0xb5, 0xdc, 0xe0, 0xc2, 0x7f, 0x90, 0xc1, 0xf9,
	0x81, 0x4e, 0x38, 0xbc, 0x40, 0x4f, 0xba, 0x39, 0x34, 0x75, 0x28, 0xbc, 0xf3, 0x03, 0xff, 0x6a,
	0x18, 0x0d, 0xce, 0x41, 0x2f, 0xda, 0x44, 0xe6, 0xbf, 0x9a, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff,
	0x21, 0x27, 0x15, 0x68, 0x67, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TracerServiceClient is the client API for TracerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TracerServiceClient interface {
	Record(ctx context.Context, in *RecordRequest, opts ...grpc.CallOption) (*RecordResponse, error)
	Trace(ctx context.Context, in *TraceRequest, opts ...grpc.CallOption) (*TraceResponse, error)
	Mark(ctx context.Context, in *MarkRequest, opts ...grpc.CallOption) (*MarkResponse, error)
}

type tracerServiceClient struct {
	cc *grpc.ClientConn
}

func NewTracerServiceClient(cc *grpc.ClientConn) TracerServiceClient {
	return &tracerServiceClient{cc}
}

func (c *tracerServiceClient) Record(ctx context.Context, in *RecordRequest, opts ...grpc.CallOption) (*RecordResponse, error) {
	out := new(RecordResponse)
	err := c.cc.Invoke(ctx, "/tracer.TracerService/Record", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tracerServiceClient) Trace(ctx context.Context, in *TraceRequest, opts ...grpc.CallOption) (*TraceResponse, error) {
	out := new(TraceResponse)
	err := c.cc.Invoke(ctx, "/tracer.TracerService/Trace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tracerServiceClient) Mark(ctx context.Context, in *MarkRequest, opts ...grpc.CallOption) (*MarkResponse, error) {
	out := new(MarkResponse)
	err := c.cc.Invoke(ctx, "/tracer.TracerService/Mark", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TracerServiceServer is the server API for TracerService service.
type TracerServiceServer interface {
	Record(context.Context, *RecordRequest) (*RecordResponse, error)
	Trace(context.Context, *TraceRequest) (*TraceResponse, error)
	Mark(context.Context, *MarkRequest) (*MarkResponse, error)
}

func RegisterTracerServiceServer(s *grpc.Server, srv TracerServiceServer) {
	s.RegisterService(&_TracerService_serviceDesc, srv)
}

func _TracerService_Record_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RecordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TracerServiceServer).Record(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tracer.TracerService/Record",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TracerServiceServer).Record(ctx, req.(*RecordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TracerService_Trace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TraceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TracerServiceServer).Trace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tracer.TracerService/Trace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TracerServiceServer).Trace(ctx, req.(*TraceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TracerService_Mark_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MarkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TracerServiceServer).Mark(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tracer.TracerService/Mark",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TracerServiceServer).Mark(ctx, req.(*MarkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TracerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tracer.TracerService",
	HandlerType: (*TracerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Record",
			Handler:    _TracerService_Record_Handler,
		},
		{
			MethodName: "Trace",
			Handler:    _TracerService_Trace_Handler,
		},
		{
			MethodName: "Mark",
			Handler:    _TracerService_Mark_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tracer.proto",
}
